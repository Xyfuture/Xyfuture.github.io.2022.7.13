<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>物联设备 on My New Hugo Site</title>
    <link>https://xyfuture.github.io/categories/%E7%89%A9%E8%81%94%E8%AE%BE%E5%A4%87/</link>
    <description>Recent content in 物联设备 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://xyfuture.github.io/categories/%E7%89%A9%E8%81%94%E8%AE%BE%E5%A4%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>esp8266刷micro python及串口通信</title>
      <link>https://xyfuture.github.io/posts/esp8226%E5%88%B7micropython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xyfuture.github.io/posts/esp8226%E5%88%B7micropython/</guid>
      <description>esp8266刷micro python,并且串口通信  参考链接:
 实验室 有关串口通信   前言 esp8266是乐鑫公司推出的集wifi与mcu一体的芯片,性能比51内核强不少,同时价格较为便宜,得到了众多diy爱好者的追捧,同时不少低成本的智能家居产品也使用了该产品(米家台灯就是用的esp8266) nodemcu团队为esp8266设计了方便开发的pcb,同时他们为esp8266提供了lua开发环境(项目还在继续,但是人气没有那么高了)
micro python是国外的项目,该项目将python解释器移植到了单片机上,该团队重写了python的许多模块使得python能够在单片机上运行,但是传统的x86模块并不能很好的运行(毕竟架构差异较大).micro python语法与python完全一致,因此可以快速开发.micro python团队将解释器移植到了esp8266上,因此我们可以在esp8266上使用micro python.
固件刷入 既然是python,那么输入的方式也必须python
首先安装esptool
pip install esptool 然后使用esptool提供的命令清空flash
esptool --port COM6 erase_flash port中填入实际的端口
最后刷入新的固件
固件下载地址: micropython.org
在这个网站中下载最新的stable的esp8266的固件(bin格式),下载后备用
使用esptool提供的命令刷入esp8266
esptool --port COM4 --baud 460800 write_flash --flash_size=detect 0 esp8266.bin#（这个改为具体固件的位置） 这样就能将固件刷入到esp8266中了
测试 固件刷入后我们要进行测试,看看刷入是否成功,与esp8266的交互方式是串口,我们首先需要一个串口软件,这里暂时先用putty,不过这个软件有bug,因此不建议一直用这个软件.
首先打开软件选择serial设置参数
COM口选择实际的
Speed通信速率使用115200
Flow contorl 选None
下面是正确的设置
点开open,就可以通信了
如果不出文字,按一下rst</description>
    </item>
    
  </channel>
</rss>
